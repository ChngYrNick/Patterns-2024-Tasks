'use strict';

const eslint = require('@eslint/js');
const configPrettier = require('eslint-config-prettier');
const pluginPrettier = require('eslint-plugin-prettier');

module.exports = [
    {
        languageOptions: {
            ecmaVersion: 'latest',
            sourceType: 'commonjs',
            globals: {
                BigInt: true,
                AbortController: true,
                AbortSignal: true,
                DOMException: true,
                fetch: true,
                console: true,
                process: true,
                Buffer: true,
                Blob: true,
                TextDecoder: true,
                TextEncoder: true,
                TextDecoderStream: true,
                TextEncoderStream: true,
                WebSocket: true,
                window: true,
                setTimeout: true,
                setImmediate: true,
                setInterval: true,
                clearTimeout: true,
                clearImmediate: true,
                clearInterval: true,
                __dirname: true,
                __filename: true,
                Event: true,
                EventTarget: true,
                MessageChannel: true,
                MessageEvent: true,
                MessagePort: true,
                FormData: true,
                Headers: true,
                Response: true,
                Request: true,
                ByteLengthQueuingStrategy: true,
                URL: true,
                URLSearchParams: true,
                WebAssembly: true,
                queueMicrotask: true,
                BroadcastChannel: true,
                CompressionStream: true,
                DecompressionStream: true,
                CountQueuingStrategy: true,
                DomainError: true,
                document: true,
                location: true,
                self: true,
                caches: true,
                navigator: true,
                File: true,
                localStorage: true,
            },
        },
        plugins: { prettier: pluginPrettier },
        ignores: ['node_modules/*'],
        rules: {
            ...eslint.configs.recommended.rules,
            ...configPrettier.rules,
            eqeqeq: ['error', 'always'],
            'no-loop-func': ['error'],
            'no-self-compare': ['error'],
            'no-unmodified-loop-condition': ['error'],
            'no-useless-concat': ['error'],
            curly: ['error', 'multi-line', 'consistent'],
            'consistent-return': ['error', { treatUndefinedAsUnspecified: true }],
            'no-unused-private-class-members': ['error'],
            'no-invalid-this': ['error'],
            'class-methods-use-this': ['warn'],
            'arrow-body-style': ['error', 'as-needed'],
            'arrow-parens': ['error', 'always'],
            'arrow-spacing': ['error'],
            'no-useless-computed-key': ['error'],
            'no-useless-rename': ['error'],
            'no-var': ['error'],
            'object-shorthand': ['error', 'always'],
            'prefer-arrow-callback': ['error'],
            'prefer-const': ['error'],
            'prefer-numeric-literals': ['error'],
            'prefer-rest-params': ['error'],
            'prefer-spread': ['error'],
            'rest-spread-spacing': ['error', 'never'],
            'template-curly-spacing': ['error', 'never'],
            'handle-callback-err': ['error', '^err'],
            'no-console': ['off'],
            'no-constant-condition': [
                'error',
                {
                    checkLoops: false,
                },
            ],
            'no-return-assign': ['error'],
            strict: ['error', 'global'],
            indent: ['off'],
            'block-spacing': ['error', 'always'],
            'brace-style': [
                'error',
                '1tbs',
                {
                    allowSingleLine: true,
                },
            ],
            camelcase: ['error'],
            'comma-dangle': ['error', 'always-multiline'],
            'comma-spacing': [
                'error',
                {
                    before: false,
                    after: true,
                },
            ],
            'comma-style': ['error', 'last'],
            'eol-last': ['error'],
            'func-call-spacing': ['error', 'never'],
            'key-spacing': [
                'error',
                {
                    beforeColon: false,
                    afterColon: true,
                    mode: 'minimum',
                },
            ],
            'keyword-spacing': [
                'error',
                {
                    before: true,
                    after: true,
                    overrides: {
                        function: {
                            after: false,
                        },
                    },
                },
            ],
            'linebreak-style': ['error', 'unix'],
            'max-len': [
                'error',
                {
                    code: 120,
                    ignoreUrls: true,
                },
            ],
            'max-nested-callbacks': [
                'error',
                {
                    max: 5,
                },
            ],
            'new-cap': [
                'error',
                {
                    newIsCap: true,
                    capIsNew: true,
                    properties: true,
                },
            ],
            'new-parens': ['error'],
            'no-lonely-if': ['error'],
            'no-trailing-spaces': ['error'],
            'no-unneeded-ternary': ['error'],
            'no-nested-ternary': ['error'],
            'no-whitespace-before-property': ['error'],
            'object-curly-spacing': ['error', 'always'],
            'operator-assignment': ['error', 'always'],
            'operator-linebreak': ['error', 'after', { overrides: { '?': 'before', ':': 'before' } }],
            quotes: [
                'error',
                'single',
                {
                    allowTemplateLiterals: true,
                },
            ],
            semi: ['error', 'always'],
            'semi-spacing': [
                'error',
                {
                    before: false,
                    after: true,
                },
            ],
            'space-before-blocks': ['error', 'always'],
            'space-before-function-paren': [
                'error',
                {
                    anonymous: 'never',
                    named: 'never',
                    asyncArrow: 'always',
                },
            ],
            'space-in-parens': ['error', 'never'],
            'space-infix-ops': ['error'],
            'space-unary-ops': [
                'error',
                {
                    words: true,
                    nonwords: false,
                    overrides: {
                        typeof: false,
                    },
                },
            ],
            'no-extra-parens': [
                'error',
                'all',
                {
                    returnAssign: false,
                    nestedBinaryExpressions: false,
                    enforceForArrowConditionals: false,
                },
            ],
            'no-shadow-restricted-names': ['error'],
            'no-use-before-define': [
                'error',
                {
                    functions: false,
                },
            ],
        },
    },
];
